Remote Graph Database

    Remote Graph Database is a tool for introspecting a running Neo4j
    Graph Database instance from a different process. The
    implementation is not speedy enough to be used as the main access
    channel to a Graph Database for actual applications.

    The intended use case is to start a Remote Graph Database server
    as part of the main application, and then connect to that server
    from a client such as
    {{{http://wiki.neo4j.org/content/Neoclipse}Neoclipse}} to
    introspect the live graph without having to stop the
    application. As Remote Graph Database is a full implementation of
    the Neo4j Graph Database it is also possible to connect jobs that
    do small modifications of the graph through it, or some automated
    reporting.

Getting Started

    To use Remote Graph Database over RMI you first need to configure
    the server:

%{source-code|snippet=class|file=src/test/java/examples/ThatStartsARemoteGraphDatabaseRMIServer.java}

    Then you connect to the Remote Graph Database server like so:

%{source-code|snippet=class|file=src/test/java/examples/ThatConnectsToARemoteGraphDatabaseServer.java}

    Then you use the Remote Graph Database service just like you use a
    normal GraphDatabaseService.

    You also need to start a rmiregistry with access to the Remote
    Graph Database rmi transport layer classes:

---
rmiregistry -J-Djava.class.path=neo4j-remote-graphdb-<VERSION>.jar
---

    If you only want to make a Neo4j Graph Database store available as
    a Remote Graph Database over RMI server, with no other code
    running on the server (e.g. for testing purposes), there is a main
    method in the RmiTransport class that does this:

---
java -cp neo4j-kernel-<VERSION>.jar:jta_1.1.jar:neo4j-remote-graphdb-<VERSION>.jar
	org.neo4j.remote.transports.RmiTransport path/to/neo/store rmi://rmi-server/neo-service
---

    If the rmi-server is found to be the local machine and the local machine
    does not have a running rmi registry, this command will create a registry.


Adding Indexes

    The next thing you will probably want to do is to expose indexes
    to the client through the Remote Graph Database system. To be able
    to do this the index services in your application needs to be
    registered with your Remote Graph Database server.

%{source-code|snippet=class|file=src/test/java/examples/RemoteGraphDatabaseServerFactory.java}

    Then the indexes are available for access as remote indexes on the client:

%{source-code|snippet=class|file=src/test/java/examples/ThatAccessesARemoteIndexService.java}

    When running a stand alone Remote Graph Database server index
    services can be registered by adding additional arguments to the
    end of the command line.

    These arguments should have the format of:

---
class.name.for.the.IndexServiceImplementation:index-service-identifier
---
